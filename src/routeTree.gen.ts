/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StatsImport } from './routes/stats'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as ResourcesIndexImport } from './routes/resources/index'
import { Route as BetsIndexImport } from './routes/bets/index'
import { Route as SettingsProfileImport } from './routes/settings/profile'
import { Route as BetsNewImport } from './routes/bets/new'
import { Route as BetsBetIdImport } from './routes/bets/$betId'
import { Route as BankrollHistoryImport } from './routes/bankroll/history'
import { Route as BankrollAdjustImport } from './routes/bankroll/adjust'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create/Update Routes

const StatsRoute = StatsImport.update({
  id: '/stats',
  path: '/stats',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ResourcesIndexRoute = ResourcesIndexImport.update({
  id: '/resources/',
  path: '/resources/',
  getParentRoute: () => rootRoute,
} as any)

const BetsIndexRoute = BetsIndexImport.update({
  id: '/bets/',
  path: '/bets/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsProfileRoute = SettingsProfileImport.update({
  id: '/settings/profile',
  path: '/settings/profile',
  getParentRoute: () => rootRoute,
} as any)

const BetsNewRoute = BetsNewImport.update({
  id: '/bets/new',
  path: '/bets/new',
  getParentRoute: () => rootRoute,
} as any)

const BetsBetIdRoute = BetsBetIdImport.update({
  id: '/bets/$betId',
  path: '/bets/$betId',
  getParentRoute: () => rootRoute,
} as any)

const BankrollHistoryRoute = BankrollHistoryImport.update({
  id: '/bankroll/history',
  path: '/bankroll/history',
  getParentRoute: () => rootRoute,
} as any)

const BankrollAdjustRoute = BankrollAdjustImport.update({
  id: '/bankroll/adjust',
  path: '/bankroll/adjust',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/stats': {
      id: '/stats'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof StatsImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/bankroll/adjust': {
      id: '/bankroll/adjust'
      path: '/bankroll/adjust'
      fullPath: '/bankroll/adjust'
      preLoaderRoute: typeof BankrollAdjustImport
      parentRoute: typeof rootRoute
    }
    '/bankroll/history': {
      id: '/bankroll/history'
      path: '/bankroll/history'
      fullPath: '/bankroll/history'
      preLoaderRoute: typeof BankrollHistoryImport
      parentRoute: typeof rootRoute
    }
    '/bets/$betId': {
      id: '/bets/$betId'
      path: '/bets/$betId'
      fullPath: '/bets/$betId'
      preLoaderRoute: typeof BetsBetIdImport
      parentRoute: typeof rootRoute
    }
    '/bets/new': {
      id: '/bets/new'
      path: '/bets/new'
      fullPath: '/bets/new'
      preLoaderRoute: typeof BetsNewImport
      parentRoute: typeof rootRoute
    }
    '/settings/profile': {
      id: '/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof SettingsProfileImport
      parentRoute: typeof rootRoute
    }
    '/bets/': {
      id: '/bets/'
      path: '/bets'
      fullPath: '/bets'
      preLoaderRoute: typeof BetsIndexImport
      parentRoute: typeof rootRoute
    }
    '/resources/': {
      id: '/resources/'
      path: '/resources'
      fullPath: '/resources'
      preLoaderRoute: typeof ResourcesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/stats': typeof StatsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/bankroll/adjust': typeof BankrollAdjustRoute
  '/bankroll/history': typeof BankrollHistoryRoute
  '/bets/$betId': typeof BetsBetIdRoute
  '/bets/new': typeof BetsNewRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/bets': typeof BetsIndexRoute
  '/resources': typeof ResourcesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/stats': typeof StatsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/bankroll/adjust': typeof BankrollAdjustRoute
  '/bankroll/history': typeof BankrollHistoryRoute
  '/bets/$betId': typeof BetsBetIdRoute
  '/bets/new': typeof BetsNewRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/bets': typeof BetsIndexRoute
  '/resources': typeof ResourcesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/stats': typeof StatsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/bankroll/adjust': typeof BankrollAdjustRoute
  '/bankroll/history': typeof BankrollHistoryRoute
  '/bets/$betId': typeof BetsBetIdRoute
  '/bets/new': typeof BetsNewRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/bets/': typeof BetsIndexRoute
  '/resources/': typeof ResourcesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/stats'
    | '/auth/login'
    | '/auth/register'
    | '/bankroll/adjust'
    | '/bankroll/history'
    | '/bets/$betId'
    | '/bets/new'
    | '/settings/profile'
    | '/bets'
    | '/resources'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/stats'
    | '/auth/login'
    | '/auth/register'
    | '/bankroll/adjust'
    | '/bankroll/history'
    | '/bets/$betId'
    | '/bets/new'
    | '/settings/profile'
    | '/bets'
    | '/resources'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/stats'
    | '/auth/login'
    | '/auth/register'
    | '/bankroll/adjust'
    | '/bankroll/history'
    | '/bets/$betId'
    | '/bets/new'
    | '/settings/profile'
    | '/bets/'
    | '/resources/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  StatsRoute: typeof StatsRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  BankrollAdjustRoute: typeof BankrollAdjustRoute
  BankrollHistoryRoute: typeof BankrollHistoryRoute
  BetsBetIdRoute: typeof BetsBetIdRoute
  BetsNewRoute: typeof BetsNewRoute
  SettingsProfileRoute: typeof SettingsProfileRoute
  BetsIndexRoute: typeof BetsIndexRoute
  ResourcesIndexRoute: typeof ResourcesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  StatsRoute: StatsRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  BankrollAdjustRoute: BankrollAdjustRoute,
  BankrollHistoryRoute: BankrollHistoryRoute,
  BetsBetIdRoute: BetsBetIdRoute,
  BetsNewRoute: BetsNewRoute,
  SettingsProfileRoute: SettingsProfileRoute,
  BetsIndexRoute: BetsIndexRoute,
  ResourcesIndexRoute: ResourcesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/stats",
        "/auth/login",
        "/auth/register",
        "/bankroll/adjust",
        "/bankroll/history",
        "/bets/$betId",
        "/bets/new",
        "/settings/profile",
        "/bets/",
        "/resources/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/stats": {
      "filePath": "stats.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/bankroll/adjust": {
      "filePath": "bankroll/adjust.tsx"
    },
    "/bankroll/history": {
      "filePath": "bankroll/history.tsx"
    },
    "/bets/$betId": {
      "filePath": "bets/$betId.tsx"
    },
    "/bets/new": {
      "filePath": "bets/new.tsx"
    },
    "/settings/profile": {
      "filePath": "settings/profile.tsx"
    },
    "/bets/": {
      "filePath": "bets/index.tsx"
    },
    "/resources/": {
      "filePath": "resources/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
